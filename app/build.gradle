apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'





ext {
    PUBLISH_GROUP_ID = 'com.thisisentropy'
    PUBLISH_ARTIFACT_ID = 'remarkablesdk'
    PUBLISH_VERSION = '1.0.0'
}

version = "1.0.1"


android {
    compileSdkVersion 21
    buildToolsVersion "21.1.2"

    lintOptions {
        abortOnError false
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
    }
}

def siteUrl = 'https://github.com/entropyhub/remarkable-androidSDK'      // Homepage URL of the library
def gitUrl = 'https://github.com/entropyhub/remarkable-androidSDK.git'   // Git repository URL
group = "com.thisisentropy"                                        // Maven Group ID for the artifact




install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'remarkablesdk'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'xBroak'
                        name 'Joe'
                        email 'Joe@thisisentropy.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    /*compile 'commons-io:commons-io:2.4'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.squareup.picasso:picasso:2.5.0'*/




}
/*
task fatJar(type: Jar, dependsOn: 'compileJava') {
    from {
        sourceSets.main.output.classesDir
    }

// Add all dependencies except for android.jar to the fat jar
    from {
        configurations.compile.findAll {
            it.getName() != 'android.jar'
        }.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    archiveName = 'fatJar.jar'
}

task uberJar (type: Jar){
    from 'src/main/java'
    from(configurations.compile.collect { it.isDirectory() ? it : zipTree(it) })
}*/



task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {



    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "Remarkable-Android-SDK"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true

    }
}

apply from: 'https://raw.githubusercontent.com/ArthurHub/release-android-library/master/android-release-jar.gradle'

//apply from: 'https://raw.githubusercontent.com/blundell/release-android-library/master/android-release-aar.gradle'

task jarTask(type: Jar) {
    baseName="my-sdk-android"
    from 'src/main/java'
}



configurations {
    jarConfiguration
}

artifacts {
    jarConfiguration jarTask
}
